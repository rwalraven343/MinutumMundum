//Code generated by MapCompiler.
//Robot Fighter Level 1!!!

namespace ROBOT_FIGHTER_LEVEL1_MAP
{
	namespace SHAPES
	{
		namespace SHAPE1
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,1.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape1={1,0,SHAPE1::triangles,0};

		namespace SHAPE2
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape2={1,0,SHAPE2::triangles,0};

		namespace SHAPE3
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape3={1,0,SHAPE3::triangles,0};

		namespace SHAPE4
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape4={1,0,SHAPE4::triangles,0};

		namespace SHAPE5
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape5={0,1,0,SHAPE5::quads};

		namespace SHAPE6
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(0.500000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);
			static const TRIANGLE triangle2(VECTOR(0.500000000000,1.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[2]={triangle1,triangle2};
		}

		static const MAP_PROPERTIES::SHAPE shape6={2,0,SHAPE6::triangles,0};

		namespace SHAPE7
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,1.000000000000),VECTOR(1.000000000000,0.500000000000),VECTOR(1.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape7={1,0,SHAPE7::triangles,0};

		namespace SHAPE8
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.500000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape8={0,1,0,SHAPE8::quads};

		namespace SHAPE9
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.500000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape9={0,1,0,SHAPE9::quads};

		namespace SHAPE10
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.500000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape10={1,0,SHAPE10::triangles,0};

		namespace SHAPE11
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,0.500000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape11={0,1,0,SHAPE11::quads};

		namespace SHAPE12
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(0.000000000000,0.500000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape12={1,0,SHAPE12::triangles,0};

		namespace SHAPE13
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,0.500000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape13={1,0,SHAPE13::triangles,0};

		namespace SHAPE14
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,0.500000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape14={0,1,0,SHAPE14::quads};

		namespace SHAPE15
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,1.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape15={1,0,SHAPE15::triangles,0};

		namespace SHAPE16
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape16={1,0,SHAPE16::triangles,0};

		namespace SHAPE17
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape17={1,0,SHAPE17::triangles,0};

		namespace SHAPE18
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(0.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape18={1,0,SHAPE18::triangles,0};

		namespace SHAPE19
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape19={0,1,0,SHAPE19::quads};

		namespace SHAPE20
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(0.500000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);
			static const TRIANGLE triangle2(VECTOR(0.500000000000,1.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[2]={triangle1,triangle2};
		}

		static const MAP_PROPERTIES::SHAPE shape20={2,0,SHAPE20::triangles,0};

		namespace SHAPE21
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,1.000000000000),VECTOR(1.000000000000,0.500000000000),VECTOR(1.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape21={1,0,SHAPE21::triangles,0};

		namespace SHAPE22
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.500000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape22={0,1,0,SHAPE22::quads};

		namespace SHAPE23
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.500000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape23={0,1,0,SHAPE23::quads};

		namespace SHAPE24
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.500000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape24={1,0,SHAPE24::triangles,0};

		namespace SHAPE25
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,0.500000000000),VECTOR(0.000000000000,1.000000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape25={0,1,0,SHAPE25::quads};

		namespace SHAPE26
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(0.000000000000,0.500000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape26={1,0,SHAPE26::triangles,0};

		namespace SHAPE27
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,0.500000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape27={1,0,SHAPE27::triangles,0};

		namespace SHAPE28
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,0.500000000000),2.000000000000,4.000000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape28={0,1,0,SHAPE28::quads};
	}

	static const int numshapes=28;

	static const MAP_PROPERTIES::SHAPE shapes[28]={SHAPES::shape1,SHAPES::shape2,SHAPES::shape3,SHAPES::shape4,SHAPES::shape5,SHAPES::shape6,SHAPES::shape7,SHAPES::shape8,SHAPES::shape9,SHAPES::shape10,SHAPES::shape11,SHAPES::shape12,SHAPES::shape13,SHAPES::shape14,SHAPES::shape15,SHAPES::shape16,SHAPES::shape17,SHAPES::shape18,SHAPES::shape19,SHAPES::shape20,SHAPES::shape21,SHAPES::shape22,SHAPES::shape23,SHAPES::shape24,SHAPES::shape25,SHAPES::shape26,SHAPES::shape27,SHAPES::shape28};

	namespace AMBIENT_SOUNDS
	{
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound1={"Data\\Samples\\industrial_robot.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound2={"Data\\Samples\\large_drill.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound3={"Data\\Samples\\industrial_robot.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound4={"Data\\Samples\\large_drill.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound5={"Data\\Samples\\industrial_robot.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound6={"Data\\Samples\\large_drill.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
	}

	static const int numambient_sounds=6;

	static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sounds[6]={AMBIENT_SOUNDS::ambient_sound1,AMBIENT_SOUNDS::ambient_sound2,AMBIENT_SOUNDS::ambient_sound3,AMBIENT_SOUNDS::ambient_sound4,AMBIENT_SOUNDS::ambient_sound5,AMBIENT_SOUNDS::ambient_sound6};

	namespace PRIMARY_LAYER
	{
		static const int numlinear_motions =0;
		static const int numangular_motions=0;

		static const MAP_PROPERTIES::LINEAR_MOTION *linear_motions=0;
		static const MAP_PROPERTIES::ANGULAR_MOTION *angular_motions=0;
	}

	namespace SECONDARY_LAYER
	{
		static const MAP_PROPERTIES::LINEAR_MOTION linear_motion1={VECTOR(0.000000000000,11264.000000000000),0.000000000000,64.000000000000,true,"Data\\Samples\\metallic_drag_loop.wav","Data\\Samples\\rocket_propulsion_loop.wav",1.000000000000,0.500000000000,1.000000000000,0.500000000000};
		static const MAP_PROPERTIES::LINEAR_MOTION linear_motion2={VECTOR(0.000000000000,-11264.000000000000),64.000000000000,64.000000000000,true,"Data\\Samples\\metallic_drag_loop.wav","Data\\Samples\\rocket_propulsion_loop.wav",1.000000000000,0.500000000000,1.000000000000,0.500000000000};

		static const int numlinear_motions =2;
		static const int numangular_motions=0;

		static const MAP_PROPERTIES::LINEAR_MOTION linear_motions[2]={linear_motion1,linear_motion2};
		static const MAP_PROPERTIES::ANGULAR_MOTION *angular_motions=0;
	}

	namespace TERTIARY_LAYER
	{
		static const int numlinear_motions =0;
		static const int numangular_motions=0;

		static const MAP_PROPERTIES::LINEAR_MOTION *linear_motions=0;
		static const MAP_PROPERTIES::ANGULAR_MOTION *angular_motions=0;
	}

	namespace PRIMARY_LAYER
	{
		static const int numbeams=0;

		static const MAP_PROPERTIES::BEAM *beams=0;
	}

	namespace SECONDARY_LAYER
	{
		static const int numbeams=0;

		static const MAP_PROPERTIES::BEAM *beams=0;
	}

	namespace TERTIARY_LAYER
	{
		static const int numbeams=0;

		static const MAP_PROPERTIES::BEAM *beams=0;
	}

	namespace PRIMARY_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace SECONDARY_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace TERTIARY_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace FOREGROUND_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace BACKGROUND_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace PRIMARY_LAYER
	{
		static const int texture_index[2048]=
		{
			0,1,2,3,4,5,6,7,8,9,10,11,0,1,2,3,4,5,6,7,8,9,10,11,0,1,2,3,4,5,6,7,8,9,10,11,0,1,2,3,4,5,6,7,8,9,10,11,0,1,2,3,0,1,2,3,4,5,6,7,8,9,10,6,
			12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,
			24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,30,
			36,-1,-1,-1,-1,-1,-1,-1,-1,460,461,457,457,163,457,457,458,459,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,42,
			48,-1,-1,-1,-1,-1,-1,460,461,457,457,163,163,163,163,163,163,457,458,459,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,187,188,189,186,187,188,189,-1,-1,-1,-1,-1,-1,-1,-1,-1,54,
			60,163,163,163,163,163,163,457,457,457,457,163,163,163,163,457,163,163,163,457,458,459,-1,-1,-1,-1,186,187,188,189,186,187,188,189,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,198,199,200,201,198,199,200,201,-1,-1,186,187,188,186,187,188,189,66,
			72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,457,163,163,163,457,458,459,-1,-1,198,199,200,201,198,199,200,201,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,-1,-1,198,199,200,198,199,200,201,78,
			84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,163,163,457,163,163,457,457,-1,-1,26,27,28,29,30,31,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,38,123,124,125,126,127,128,45,-1,-1,26,27,28,29,30,31,32,33,
			96,163,163,163,163,163,163,457,457,457,458,459,-1,-1,-1,-1,26,27,28,29,30,31,32,33,-1,-1,38,123,124,125,126,127,128,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,50,58,52,53,54,55,58,57,-1,-1,38,123,124,125,126,127,128,45,
			108,163,163,163,163,163,163,457,457,457,457,457,458,459,-1,-1,38,123,124,125,126,127,128,45,-1,-1,50,58,52,53,54,55,58,57,-1,-1,186,187,188,189,186,187,188,189,-1,-1,62,70,64,65,66,67,70,69,-1,-1,50,58,52,53,54,55,58,57,
			120,52,49,58,49,52,26,27,28,29,30,31,32,33,-1,-1,50,58,52,53,54,55,58,57,-1,-1,62,70,64,65,66,67,70,69,-1,-1,198,199,200,201,198,199,200,201,-1,-1,74,82,76,77,78,79,82,81,-1,-1,62,70,64,65,66,67,70,69,
			132,64,61,70,61,64,38,123,124,125,126,127,128,45,-1,-1,62,70,64,65,66,67,70,69,-1,-1,74,82,76,77,78,79,82,81,-1,-1,26,27,28,29,30,31,32,33,-1,-1,86,94,88,89,90,91,94,93,-1,-1,74,82,76,77,78,79,82,81,
			0,58,73,82,73,86,50,58,52,53,54,55,58,57,-1,-1,74,82,76,77,78,79,82,81,-1,-1,86,94,88,89,90,91,94,93,-1,-1,38,123,124,125,126,127,128,45,-1,-1,98,123,124,125,126,127,128,105,-1,-1,86,94,88,89,90,91,94,93,
			12,70,85,94,85,58,62,70,64,65,66,67,70,69,-1,-1,86,94,88,89,90,91,94,93,-1,-1,98,123,124,125,126,127,128,105,-1,-1,50,58,52,53,54,55,58,57,-1,-1,110,111,112,113,114,115,116,117,-1,-1,98,123,124,125,126,127,128,105,
			24,82,123,124,125,70,74,82,76,77,78,79,82,81,-1,-1,98,123,124,125,126,127,128,105,-1,-1,110,111,112,113,114,115,116,117,-1,-1,62,70,64,65,66,67,70,69,-1,-1,186,187,188,189,186,187,188,189,-1,-1,110,111,112,113,114,115,116,117,
			36,94,86,123,124,125,86,94,88,89,90,91,94,93,-1,-1,110,111,112,113,114,115,116,117,-1,-1,186,187,188,189,186,187,188,189,-1,-1,74,82,76,77,78,79,82,81,-1,-1,198,199,200,201,198,199,200,201,-1,-1,-1,-1,-1,-1,-1,-1,-1,42,
			48,-1,472,473,86,94,98,123,124,125,126,127,128,105,-1,-1,186,187,188,189,186,187,188,189,-1,-1,198,199,200,201,198,199,200,201,-1,-1,86,94,88,89,90,91,94,93,-1,-1,26,27,28,29,30,31,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,54,
			60,-1,-1,-1,472,473,110,111,112,113,114,115,116,117,-1,-1,198,199,200,201,198,199,200,201,-1,-1,26,27,28,29,30,31,32,33,-1,-1,98,123,124,125,126,127,128,105,-1,-1,38,123,124,125,126,127,128,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,66,
			72,-1,-1,-1,-1,-1,186,187,188,189,186,187,188,189,-1,-1,26,27,28,29,30,31,32,33,-1,-1,38,123,124,125,126,127,128,45,-1,-1,110,111,112,113,114,115,116,117,-1,-1,50,58,52,53,54,55,58,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,78,
			84,-1,-1,-1,-1,-1,198,199,200,201,198,199,200,201,-1,-1,38,123,124,125,126,127,128,45,-1,-1,50,58,52,53,54,55,58,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,70,64,65,66,67,70,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,
			96,-1,-1,-1,460,461,26,27,28,29,30,31,32,33,-1,-1,50,58,52,53,54,55,58,57,-1,-1,62,70,64,65,66,67,70,69,-1,-1,186,187,188,189,186,187,188,189,-1,-1,74,82,76,77,78,79,82,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,
			108,-1,460,461,86,58,38,123,124,125,126,127,128,45,-1,-1,62,70,64,65,66,67,70,69,-1,-1,74,82,76,77,78,79,82,81,-1,-1,198,199,200,201,198,199,200,201,-1,-1,86,94,88,89,90,91,94,93,-1,-1,186,187,188,189,187,188,189,18,
			120,58,123,124,125,70,50,58,52,53,54,55,58,57,-1,-1,74,82,76,77,78,79,82,81,-1,-1,86,94,88,89,90,91,94,93,-1,-1,26,27,28,29,30,31,32,33,-1,-1,98,123,124,125,126,127,128,105,-1,-1,198,199,200,201,199,200,201,30,
			132,70,123,124,125,82,62,70,64,65,66,67,70,69,-1,-1,86,94,88,89,90,91,94,93,-1,-1,98,123,124,125,126,127,128,105,-1,-1,38,123,124,125,126,127,128,45,-1,-1,110,111,112,113,114,115,116,117,-1,-1,26,27,28,29,30,31,32,33,
			0,82,52,52,58,94,74,82,76,77,78,79,82,81,-1,-1,98,123,124,125,126,127,128,105,-1,-1,110,111,112,113,114,115,116,117,-1,-1,50,58,52,53,54,55,58,57,-1,-1,186,187,188,189,186,187,188,189,-1,-1,38,123,124,125,126,127,128,45,
			12,94,64,64,70,73,86,94,88,89,90,91,94,93,-1,-1,110,111,112,113,114,115,116,117,-1,-1,186,187,188,189,186,187,188,189,-1,-1,62,70,64,65,66,67,70,69,-1,-1,198,199,200,201,198,199,200,201,-1,-1,50,58,52,53,54,55,58,57,
			24,123,124,125,82,85,98,123,124,125,126,127,128,105,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,198,199,200,201,198,199,200,201,-1,-1,74,82,76,77,78,79,82,81,-1,-1,26,27,28,29,30,31,32,33,-1,-1,62,70,64,65,66,67,70,69,
			36,123,124,125,94,97,110,111,112,113,114,115,116,117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,-1,-1,86,94,88,89,90,91,94,93,-1,-1,38,123,124,125,126,127,128,45,-1,-1,74,82,76,77,78,79,82,81,
			48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,461,457,458,459,-1,-1,-1,-1,-1,-1,38,58,52,53,54,55,58,45,-1,-1,98,123,124,125,126,127,128,105,-1,-1,50,58,52,53,54,55,58,57,-1,-1,86,94,88,89,90,91,94,93,
			60,186,187,188,189,186,187,188,189,-1,-1,-1,-1,-1,-1,-1,163,163,163,163,458,459,-1,-1,-1,-1,50,70,64,65,66,67,70,57,-1,-1,110,111,112,113,114,115,116,117,-1,-1,62,70,64,65,66,67,70,69,-1,-1,98,123,124,125,126,127,128,105,
			72,198,199,200,201,198,199,200,201,-1,-1,460,461,163,-1,-1,163,457,163,457,163,163,458,459,-1,-1,62,82,76,77,78,79,82,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,82,76,77,78,79,82,81,-1,-1,110,111,112,113,114,115,116,117,
			84,133,134,135,136,137,138,139,140,141,142,143,140,141,142,143,132,133,134,135,136,137,138,139,140,141,74,94,88,89,90,91,94,81,138,139,140,141,142,143,132,133,134,135,136,137,86,94,88,89,90,91,94,93,134,135,136,137,138,139,140,141,142,138
		};

		static const int shape_index[2048]=
		{
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,6,7,4,4,4,4,4,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,-1,-1,-1,6,7,4,4,4,4,4,4,4,4,4,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,8,9,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,8,9,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,12,13,4,4,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,12,13,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,6,7,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,6,7,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,8,9,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,8,9,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,7,4,-1,-1,4,4,4,4,4,4,8,9,-1,-1,4,4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,-1,-1,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4
		};
	}

	namespace SECONDARY_LAYER
	{
		static const int texture_index[2048]=
		{
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,163,163,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
		};

		static const int shape_index[2048]=
		{
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
		};
	}

	namespace TERTIARY_LAYER
	{
		static const int texture_index[2048]=
		{
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
		};

		static const int shape_index[2048]=
		{
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
		};
	}

	namespace FOREGROUND_LAYER
	{
		static const int texture_index[2048]=
		{
			186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,
			198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,
			210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,
			222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,
			186,187,188,189,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,187,188,189,
			198,199,200,201,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,198,199,200,201,
			210,211,212,213,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,210,211,212,213,
			222,223,224,225,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,222,223,224,225,
			186,187,188,189,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,187,188,189,
			198,199,200,201,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,198,199,200,201,
			210,211,212,213,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,210,211,212,213,
			222,223,224,225,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,222,223,224,225,
			186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,
			198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,
			210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,
			222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,
			186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,
			198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,
			210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,
			222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,
			186,187,188,189,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,187,188,189,
			198,199,200,201,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,198,199,200,201,
			210,211,212,213,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,210,211,212,213,
			222,223,224,225,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,222,223,224,225,
			186,187,188,189,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,187,188,189,
			198,199,200,201,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,198,199,200,201,
			210,211,212,213,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,210,211,212,213,
			222,223,224,225,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,222,223,224,225,
			186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,186,187,188,189,
			198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,
			210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,210,211,212,213,
			222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225,222,223,224,225
		};
	}

	namespace BACKGROUND_LAYER
	{
		static const int texture_index[2048]=
		{
			492,493,494,495,496,497,498,499,500,501,502,503,492,493,494,495,496,497,498,499,500,501,502,503,492,493,494,495,496,497,498,499,500,501,502,503,492,493,494,495,496,497,498,499,500,501,502,503,492,493,494,495,496,497,498,499,500,501,502,503,492,493,494,495,
			504,505,506,507,508,509,510,511,512,513,514,515,504,505,506,507,508,509,510,511,512,513,514,515,504,505,506,507,508,509,510,511,512,513,514,515,504,505,506,507,508,509,510,511,512,513,514,515,504,505,506,507,508,509,510,511,512,513,514,515,504,505,506,507,
			516,517,518,519,520,521,522,523,524,525,526,527,516,517,518,519,520,521,522,523,524,525,526,527,516,517,518,519,520,521,522,523,524,525,526,527,516,517,518,519,520,521,522,523,524,525,526,527,516,517,518,519,520,521,522,523,524,525,526,527,516,517,518,519,
			528,529,530,531,532,533,534,535,536,537,538,539,528,529,530,531,532,533,534,535,536,537,538,539,528,529,530,531,532,533,534,535,536,537,538,539,528,529,530,531,532,533,534,535,536,537,538,539,528,529,530,531,532,533,534,535,536,537,538,539,528,529,530,531,
			540,541,542,543,544,545,546,547,548,549,550,551,540,541,542,543,544,545,546,547,548,549,550,551,540,541,542,543,544,545,546,547,548,549,550,551,540,541,542,543,544,545,546,547,548,549,550,551,540,541,542,543,544,545,546,547,548,549,550,551,540,541,542,543,
			552,553,554,555,556,557,558,559,560,561,562,563,552,553,554,555,556,557,558,559,560,561,562,563,552,553,554,555,556,557,558,559,560,561,562,563,552,553,554,555,556,557,558,559,560,561,562,563,552,553,554,555,556,557,558,559,560,561,562,563,552,553,554,555,
			564,565,566,567,568,569,570,571,572,573,574,575,564,565,566,567,568,569,570,571,572,573,574,575,564,565,566,567,568,569,570,571,572,573,574,575,564,565,566,567,568,569,570,571,572,573,574,575,564,565,566,567,568,569,570,571,572,573,574,575,564,565,566,567,
			576,577,578,579,580,581,582,583,584,585,586,587,576,577,578,579,580,581,582,583,584,585,586,587,576,577,578,579,580,581,582,583,584,585,586,587,576,577,578,579,580,581,582,583,584,585,586,587,576,577,578,579,580,581,582,583,584,585,586,587,576,577,578,579,
			588,589,590,591,592,593,594,595,596,597,598,599,588,589,590,591,592,593,594,595,596,597,598,599,588,589,590,591,592,593,594,595,596,597,598,599,588,589,590,591,592,593,594,595,596,597,598,599,588,589,590,591,592,593,594,595,596,597,598,599,588,589,590,591,
			600,601,602,603,604,605,606,607,608,609,610,611,600,601,602,603,604,605,606,607,608,609,610,611,600,601,602,603,604,605,606,607,608,609,610,611,600,601,602,603,604,605,606,607,608,609,610,611,600,601,602,603,604,605,606,607,608,609,610,611,600,601,602,603,
			612,613,614,615,616,617,618,619,620,621,622,623,612,613,614,615,616,617,618,619,620,621,622,623,612,613,614,615,616,617,618,619,620,621,622,623,612,613,614,615,616,617,618,619,620,621,622,623,612,613,614,615,616,617,618,619,620,621,622,623,612,613,614,615,
			462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,462,463,464,465,466,
			402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,
			414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,
			426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,
			438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,
			450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,
			462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,
			402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,
			414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,
			426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,
			438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,
			450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,
			462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,
			402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,
			414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,
			426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,430,431,426,427,428,429,
			438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,442,443,438,439,440,441,
			450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,454,455,450,451,452,453,
			462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,466,467,462,463,464,465,
			402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,406,407,402,403,404,405,
			414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417,418,419,414,415,416,417
		};
	}
}

static const MAP_PROPERTIES robot_fighter_level1_map_properties=
{
	0.010416666666,
	0.125000000000,
	0.292968750000,
	16777216.000000000000,
	273.150000000000,
	0.250000000000,
	"Data\\Tilesets\\sci_fi_tiles_walking.bmp",
	"Data\\Textures\\Skyplanes\\clouds.bmp",
	1536,
	6912,
	128,
	128,
	0,
	1536,
	648,
	ROBOT_FIGHTER_LEVEL1_MAP::numshapes,
	ROBOT_FIGHTER_LEVEL1_MAP::shapes,
	ROBOT_FIGHTER_LEVEL1_MAP::numambient_sounds,
	ROBOT_FIGHTER_LEVEL1_MAP::ambient_sounds,
	4.000000000000,
	4.000000000000,
	64,
	32,
	false,
	VECTOR(0.000000000000,32.000000000000),
	0.250000000000,
	1.000000000000,
	{
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::texture_index,
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::shape_index,
		true,
		VECTOR(0.000000000000,0.000000000000),
		0.000000000000,
		0,
		0,
		0,
		0,
		0,
		0,
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::numlinear_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::numangular_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::linear_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::angular_motions,
		true,
		{512,{2.000000000000,6.000000000000,64.000000000000,16384.000000000000,4,8,11.250000000000,0.500000000000,0.250000000000},{1.000000000000,1.000000000000,0.000000000000},{1.000000000000,0.000000000000,0.000000000000},0.750000000000,4.000000000000,true,{1.000000000000,1.000000000000,0.000000000000},{1.000000000000,0.000000000000,0.000000000000},1.000000000000,8.000000000000},
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::numbeams,
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::beams,
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::numpointlights,
		ROBOT_FIGHTER_LEVEL1_MAP::PRIMARY_LAYER::pointlights
	},
	{
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::texture_index,
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::shape_index,
		false,
		VECTOR(0.000000000000,0.000000000000),
		0.000000000000,
		2,
		0.000000000000,
		128.000000000000,
		0,
		0,
		0,
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::numlinear_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::numangular_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::linear_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::angular_motions,
		false,
		{0,{0,0,0,0,0,0,0,0,0},{0,0,0},{0,0,0},0,0},
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::numbeams,
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::beams,
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::numpointlights,
		ROBOT_FIGHTER_LEVEL1_MAP::SECONDARY_LAYER::pointlights
	},
	{
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::texture_index,
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::shape_index,
		true,
		VECTOR(0.000000000000,0.000000000000),
		0.000000000000,
		0,
		0,
		0,
		0,
		0,
		0,
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::numlinear_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::numangular_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::linear_motions,
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::angular_motions,
		false,
		{0,{0,0,0,0,0,0,0,0,0},{0,0,0},{0,0,0},0,0},
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::numbeams,
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::beams,
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::numpointlights,
		ROBOT_FIGHTER_LEVEL1_MAP::TERTIARY_LAYER::pointlights
	},
	{
		ROBOT_FIGHTER_LEVEL1_MAP::FOREGROUND_LAYER::texture_index,
		0,
		true,
		VECTOR(0,0),
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		false,
		{0,{0,0,0,0,0,0,0,0,0},{0,0,0},{0,0,0},0,0},
		0,
		0,
		ROBOT_FIGHTER_LEVEL1_MAP::FOREGROUND_LAYER::numpointlights,
		ROBOT_FIGHTER_LEVEL1_MAP::FOREGROUND_LAYER::pointlights
	},
	{
		ROBOT_FIGHTER_LEVEL1_MAP::BACKGROUND_LAYER::texture_index,
		0,
		true,
		VECTOR(0,0),
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		false,
		{0,{0,0,0,0,0,0,0,0,0},{0,0,0},{0,0,0},0,0},
		0,
		0,
		ROBOT_FIGHTER_LEVEL1_MAP::BACKGROUND_LAYER::numpointlights,
		ROBOT_FIGHTER_LEVEL1_MAP::BACKGROUND_LAYER::pointlights
	}
};

namespace ROBOT_FIGHTER_LEVEL1_MAP
{
	namespace OBJECTS1
	{
		inline ROBOT_FIGHTER_OBJECT *create_robot_fighter_1_4(WORLD &world)
		{
			ROBOT_FIGHTER_OBJECT *object=new ROBOT_FIGHTER_OBJECT;
			object->main_init(VECTOR(768.000000000000,2304.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
	}
}
