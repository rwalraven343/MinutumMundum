//Code generated by MapCompiler.
//This is the level for flying.

namespace FLYING_LEVEL_MAP
{
	namespace SHAPES
	{
		namespace SHAPE1
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,1.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape1={1,0,SHAPE1::triangles,0};

		namespace SHAPE2
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape2={1,0,SHAPE2::triangles,0};

		namespace SHAPE3
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape3={1,0,SHAPE3::triangles,0};

		namespace SHAPE4
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[1]={triangle1};
		}

		static const MAP_PROPERTIES::SHAPE shape4={1,0,SHAPE4::triangles,0};

		namespace SHAPE5
		{
			static const QUAD     quad1    (VECTOR(0.000000000000,0.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const QUAD     quads    [1]={quad1};
		}

		static const MAP_PROPERTIES::SHAPE shape5={0,1,0,SHAPE5::quads};

		namespace SHAPE6
		{
			static const TRIANGLE triangle1(VECTOR(0.000000000000,0.000000000000),VECTOR(0.500000000000,1.000000000000),VECTOR(0.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);
			static const TRIANGLE triangle2(VECTOR(0.500000000000,1.000000000000),VECTOR(1.000000000000,0.000000000000),VECTOR(1.000000000000,1.000000000000),0.750000000000,0.250000000000,0.250000000000,8.000000000000);

			static const TRIANGLE triangles[2]={triangle1,triangle2};
		}

		static const MAP_PROPERTIES::SHAPE shape6={2,0,SHAPE6::triangles,0};
	}

	static const int numshapes=6;

	static const MAP_PROPERTIES::SHAPE shapes[6]={SHAPES::shape1,SHAPES::shape2,SHAPES::shape3,SHAPES::shape4,SHAPES::shape5,SHAPES::shape6};

	namespace AMBIENT_SOUNDS
	{
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound1={"Data\\Samples\\metallic_knocking.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound2={"Data\\Samples\\metallic_swing.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound3={"Data\\Samples\\metallic_drag.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound4={"Data\\Samples\\metallic_knocking.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound5={"Data\\Samples\\metallic_swing.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
		static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sound6={"Data\\Samples\\metallic_drag.wav",VECTOR(8192.000000000000,16384.000000000000),16384.000000000000,128.000000000000,1.000000000000,0.500000000000,0.500000000000};
	}

	static const int numambient_sounds=6;

	static const MAP_PROPERTIES::AMBIENT_SOUND ambient_sounds[6]={AMBIENT_SOUNDS::ambient_sound1,AMBIENT_SOUNDS::ambient_sound2,AMBIENT_SOUNDS::ambient_sound3,AMBIENT_SOUNDS::ambient_sound4,AMBIENT_SOUNDS::ambient_sound5,AMBIENT_SOUNDS::ambient_sound6};

	namespace PRIMARY_LAYER
	{
		static const MAP_PROPERTIES::LINEAR_MOTION linear_motion1={VECTOR(4096.000000000000,0.000000000000),0.000000000000,128.000000000000,true,"Data\\Samples\\metallic_drag_loop.wav","Data\\Samples\\rocket_propulsion_loop.wav",1.000000000000,0.500000000000,1.000000000000,0.500000000000};
		static const MAP_PROPERTIES::LINEAR_MOTION linear_motion2={VECTOR(-4096.000000000000,0.000000000000),128.000000000000,128.000000000000,true,"Data\\Samples\\metallic_drag_loop.wav","Data\\Samples\\rocket_propulsion_loop.wav",1.000000000000,0.500000000000,1.000000000000,0.500000000000};

		static const int numlinear_motions =2;
		static const int numangular_motions=0;

		static const MAP_PROPERTIES::LINEAR_MOTION linear_motions[2]={linear_motion1,linear_motion2};
		static const MAP_PROPERTIES::ANGULAR_MOTION *angular_motions=0;
	}

	namespace SECONDARY_LAYER
	{
		static const MAP_PROPERTIES::ANGULAR_MOTION angular_motion1={180.000000000000,256.000000000000,128.000000000000,true,"Data\\Samples\\metallic_drag_clickclack_loop.wav","Data\\Samples\\rocket_propulsion_loop.wav",1.000000000000,0.500000000000,1.000000000000,0.500000000000};
		static const MAP_PROPERTIES::ANGULAR_MOTION angular_motion2={-180.000000000000,384.000000000000,128.000000000000,true,"Data\\Samples\\metallic_drag_clickclack_loop.wav","Data\\Samples\\rocket_propulsion_loop.wav",1.000000000000,0.500000000000,1.000000000000,0.500000000000};

		static const int numlinear_motions =0;
		static const int numangular_motions=2;

		static const MAP_PROPERTIES::LINEAR_MOTION *linear_motions=0;
		static const MAP_PROPERTIES::ANGULAR_MOTION angular_motions[2]={angular_motion1,angular_motion2};
	}

	namespace TERTIARY_LAYER
	{
		static const MAP_PROPERTIES::ANGULAR_MOTION angular_motion1={180.000000000000,0.000000000000,128.000000000000,true,"Data\\Samples\\metallic_drag_clickclack_loop.wav","Data\\Samples\\rocket_propulsion_loop.wav",1.000000000000,0.500000000000,1.000000000000,0.500000000000};
		static const MAP_PROPERTIES::ANGULAR_MOTION angular_motion2={-180.000000000000,128.000000000000,128.000000000000,true,"Data\\Samples\\metallic_drag_clickclack_loop.wav","Data\\Samples\\rocket_propulsion_loop.wav",1.000000000000,0.500000000000,1.000000000000,0.500000000000};

		static const int numlinear_motions =0;
		static const int numangular_motions=2;

		static const MAP_PROPERTIES::LINEAR_MOTION *linear_motions=0;
		static const MAP_PROPERTIES::ANGULAR_MOTION angular_motions[2]={angular_motion1,angular_motion2};
	}

	namespace PRIMARY_LAYER
	{
		static const int numbeams=0;

		static const MAP_PROPERTIES::BEAM *beams=0;
	}

	namespace SECONDARY_LAYER
	{
		static const int numbeams=0;

		static const MAP_PROPERTIES::BEAM *beams=0;
	}

	namespace TERTIARY_LAYER
	{
		static const MAP_PROPERTIES::BEAM beam1={32,{4096.000000000000,536870912.000000000000,-514.000000000000},VECTOR(0.000000000000,-90.000000000000),1.000000000000,{0.000000000000,0.000000000000,0.750000000000,32.000000000000},0.000000000000,{0.000000000000,0.000000000000,0.000000000000,0.000000000000},0.000000000000};
		static const MAP_PROPERTIES::BEAM beam2={32,{4096.000000000000,536870912.000000000000,514.000000000000},VECTOR(0.000000000000,90.000000000000),1.000000000000,{0.000000000000,0.000000000000,0.750000000000,32.000000000000},0.000000000000,{0.000000000000,0.000000000000,0.000000000000,0.000000000000},0.000000000000};

		static const int numbeams=2;

		static const MAP_PROPERTIES::BEAM beams[2]={beam1,beam2};
	}

	namespace PRIMARY_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace SECONDARY_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace TERTIARY_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace FOREGROUND_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace BACKGROUND_LAYER
	{
		static const int numpointlights=0;

		static const MAP_PROPERTIES::POINTLIGHT *pointlights=0;
	}

	namespace PRIMARY_LAYER
	{
		static const int texture_index[2048]=
		{
			6,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,7,
			0,8,4,4,4,4,4,4,4,4,4,4,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
			1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,
			0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,
			1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,
			1,18,19,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,
			1,0,0,0,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
			0,1,0,1,0,0,7,91,92,93,91,92,93,-1,-1,-1,-1,-1,5,0,0,0,0,0,1,0,0,0,1,0,0,1,
			1,0,0,0,0,0,0,0,0,0,0,0,0,7,-1,-1,-1,-1,-1,5,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,1,0,0,7,-1,-1,-1,-1,-1,5,0,0,0,0,0,0,0,0,0,0,1,
			1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,7,-1,-1,-1,-1,-1,4,4,4,4,4,5,0,0,1,0,0,
			0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,0,0,1,
			1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,0,0,
			0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,7,16,17,16,17,16,17,14,-1,-1,-1,5,0,1,
			1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,19,18,19,18,19,0,7,-1,-1,-1,5,0,
			0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,7,-1,-1,15,1,
			1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,7,-1,15,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,15,1,
			1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,4,4,4,4,-1,15,0,
			0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,15,1,
			1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,1,
			1,0,0,0,0,2,5,2,5,2,5,2,5,2,5,2,4,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,0,
			0,0,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,1,
			1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,0,
			0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,1,
			1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,0,
			0,11,14,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,15,1,
			1,6,0,7,6,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,1,7,-1,15,0,
			0,0,1,0,0,1,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,1,0,1,7,15,1,
			1,1,0,1,1,0,1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,1,0,1,0,1,7,0,
			0,0,1,0,0,1,0,11,-1,-1,-1,-1,-1,-1,-1,14,-1,-1,14,-1,-1,-1,-1,-1,-1,5,1,0,1,0,1,1,
			1,5,0,2,5,0,2,-1,-1,-1,-1,-1,-1,-1,6,0,7,6,0,7,-1,-1,-1,-1,-1,-1,5,0,0,0,0,0,
			0,-1,4,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,15,0,1,0,0,1,0,11,-1,-1,-1,-1,-1,-1,5,2,5,2,1,
			1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,1,0,1,1,0,1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,
			0,7,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,15,0,1,0,0,1,0,11,-1,-1,-1,-1,-1,14,-1,-1,14,5,1,
			1,2,-1,-1,6,0,1,7,-1,-1,-1,-1,-1,-1,5,0,2,5,0,2,-1,-1,-1,-1,-1,6,0,7,6,0,7,0,
			0,11,-1,6,0,1,0,1,7,-1,-1,-1,-1,-1,-1,4,-1,-1,4,-1,-1,-1,-1,-1,6,0,1,0,0,1,0,1,
			1,11,-1,5,1,0,1,0,1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,0,1,0,1,1,0,1,0,
			0,11,-1,-1,5,1,0,1,0,1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,1,0,0,1,0,1,
			1,7,-1,-1,-1,5,0,0,0,0,2,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,5,0,2,5,0,2,0,
			0,2,-1,-1,-1,-1,5,2,5,2,-1,-1,-1,-1,6,0,1,7,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,4,15,1,
			1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,1,0,1,7,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,6,0,
			0,1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,1,0,1,0,1,7,-1,-1,-1,-1,-1,6,0,1,7,-1,5,1,
			1,1,2,-1,14,-1,-1,14,-1,-1,-1,-1,-1,-1,5,1,0,1,0,1,7,-1,-1,-1,6,0,1,0,1,7,15,0,
			0,2,-1,6,0,7,6,0,7,-1,-1,-1,-1,-1,-1,5,0,0,0,0,2,-1,-1,-1,5,1,0,1,0,1,7,1,
			1,11,15,0,1,0,0,1,0,11,-1,-1,-1,-1,-1,-1,5,2,5,2,-1,-1,-1,-1,-1,5,1,0,1,0,1,0,
			0,11,15,1,0,1,1,0,1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,0,0,0,1,
			1,7,15,0,1,0,0,1,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,2,5,2,0,
			0,2,-1,5,0,2,5,0,2,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,15,1,
			1,7,-1,-1,64,-1,-1,64,-1,-1,-1,-1,-1,6,0,1,7,-1,-1,-1,-1,6,0,1,7,-1,-1,-1,-1,-1,6,0,
			0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,1,0,1,7,-1,-1,6,0,1,0,1,7,-1,-1,-1,-1,5,1,
			1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,1,0,1,0,1,7,6,0,1,0,1,0,1,7,-1,-1,-1,6,0,
			0,2,-1,-1,14,-1,-1,14,-1,-1,-1,-1,-1,5,1,0,1,0,1,0,1,0,1,0,1,0,1,7,-1,-1,5,1,
			1,11,-1,6,2,-1,6,2,-1,-1,-1,-1,-1,-1,5,0,0,0,0,0,0,0,0,0,0,0,0,1,7,-1,-1,0,
			0,7,6,2,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,5,2,5,2,5,2,5,2,5,2,5,2,5,1,7,15,1,
			1,0,2,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,1,7,0,
			0,2,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,5,1,1,
			1,11,-1,4,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,6,1,1,7,-1,-1,-1,-1,-1,-1,-1,-1,5,0,
			0,11,-1,-1,-1,6,7,-1,-1,6,1,1,7,-1,-1,-1,-1,6,1,0,0,1,7,-1,-1,6,7,-1,-1,-1,15,1,
			1,7,6,7,6,1,1,7,6,1,1,1,1,7,14,14,6,1,0,0,0,0,1,7,6,1,1,7,6,7,6,0,
			5,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2
		};

		static const int shape_index[2048]=
		{
			0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,-1,2,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,4,4,3,2,3,2,3,2,3,2,3,2,3,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,4,
			4,0,4,1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,4,1,-1,-1,4,
			4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,4,4,4,1,-1,4,
			4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,1,4,
			4,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,
			4,2,4,3,2,4,3,-1,-1,-1,-1,-1,-1,-1,0,4,1,0,4,1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,2,3,2,3,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,
			4,1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,
			4,3,-1,-1,0,4,4,1,-1,-1,-1,-1,-1,-1,2,4,3,2,4,3,-1,-1,-1,-1,-1,0,4,1,0,4,1,4,
			4,-1,-1,0,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,4,4,4,4,4,4,
			4,-1,-1,2,4,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,4,4,4,4,
			4,-1,-1,-1,2,4,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,
			4,1,-1,-1,-1,2,4,4,4,4,3,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,3,2,4,3,4,
			4,3,-1,-1,-1,-1,2,3,2,3,-1,-1,-1,-1,0,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,
			4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,4,4,4,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,0,4,
			4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,1,-1,-1,-1,-1,-1,0,4,4,1,-1,2,4,
			4,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,1,-1,-1,-1,0,4,4,4,4,1,-1,4,
			4,3,-1,0,4,1,0,4,1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,3,-1,-1,-1,2,4,4,4,4,4,1,4,
			4,-1,-1,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,2,3,2,3,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,
			4,-1,-1,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,
			4,1,-1,4,4,4,4,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,2,3,4,
			4,3,-1,2,4,3,2,4,3,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,4,
			4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,4,1,-1,-1,-1,-1,0,4,4,1,-1,-1,-1,-1,-1,0,4,
			4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,4,4,4,1,-1,-1,0,4,4,4,4,1,-1,-1,-1,-1,2,4,
			4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,1,0,4,4,4,4,4,4,1,-1,-1,-1,0,4,
			4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,2,4,
			4,-1,-1,0,3,-1,0,3,-1,-1,-1,-1,-1,-1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,1,-1,-1,4,
			4,1,0,3,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,2,3,2,3,2,3,2,3,2,3,2,3,2,4,1,-1,4,
			4,4,3,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,1,4,
			4,3,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,4,
			4,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,0,4,4,1,-1,-1,-1,-1,-1,-1,-1,-1,2,4,
			4,-1,-1,-1,-1,0,1,-1,-1,0,4,4,1,-1,-1,-1,-1,0,4,4,4,4,1,-1,-1,0,1,-1,-1,-1,-1,4,
			4,1,0,1,0,4,4,1,0,4,4,4,4,1,-1,-1,0,4,4,4,4,4,4,1,0,4,4,1,0,1,0,4,
			2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3
		};
	}

	namespace SECONDARY_LAYER
	{
		static const int texture_index[2048]=
		{
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,56,57,58,59,56,57,38,39,58,59,56,57,58,59,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,60,61,62,63,60,61,40,41,62,63,60,61,62,63,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,6,38,39,7,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,6,38,39,7,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,5,40,41,2,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,5,40,41,2,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,56,57,58,59,56,57,38,39,58,59,56,57,58,59,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,60,61,62,63,60,61,40,41,62,63,60,61,62,63,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,56,57,58,59,56,57,38,39,58,59,56,57,58,59,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,6,38,39,60,61,62,63,60,61,40,41,62,63,60,61,62,63,38,39,7,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,5,40,41,11,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,15,40,41,2,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,56,57,58,59,56,57,38,39,58,59,56,57,58,59,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,60,61,62,63,60,61,40,41,62,63,60,61,62,63,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,6,38,39,11,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,15,38,39,7,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,5,40,41,56,57,58,59,56,57,38,39,58,59,56,57,58,59,40,41,2,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,60,61,62,63,60,61,40,41,62,63,60,61,62,63,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,56,57,58,59,56,57,38,39,58,59,56,57,58,59,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,60,61,62,63,60,61,40,41,62,63,60,61,62,63,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,6,38,39,7,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,6,38,39,7,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,5,40,41,2,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,5,40,41,2,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,56,57,58,59,56,57,38,39,58,59,56,57,58,59,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,60,61,62,63,60,61,40,41,62,63,60,61,62,63,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,56,57,58,59,56,57,38,39,58,59,56,57,58,59,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,6,38,39,60,61,62,63,60,61,40,41,62,63,60,61,62,63,38,39,7,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,5,40,41,11,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,15,40,41,2,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,56,57,58,59,56,57,38,39,58,59,56,57,58,59,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,60,61,62,63,60,61,40,41,62,63,60,61,62,63,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,6,38,39,11,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,15,38,39,7,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,5,40,41,56,57,58,59,56,57,38,39,58,59,56,57,58,59,40,41,2,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,60,61,62,63,60,61,40,41,62,63,60,61,62,63,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,21,22,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,5,2,-1,-1,-1,-1,-1,-1,24,25,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,2,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
		};

		static const int shape_index[2048]=
		{
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
		};
	}

	namespace TERTIARY_LAYER
	{
		static const int texture_index[2048]=
		{
			185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,203,204,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,233,234,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			187,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188
		};

		static const int shape_index[2048]=
		{
			3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0
		};
	}

	namespace FOREGROUND_LAYER
	{
		static const int texture_index[2048]=
		{
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,134,135,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,134,135,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,134,135,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,134,135,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,137,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,134,135,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,134,135,-1,-1,-1,-1,-1,
			-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,137,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,134,135,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,134,135,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,134,135,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,137,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,134,135,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,
			-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,134,135,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,134,135,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,137,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,139,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,134,135,-1,-1,-1,-1,-1,-1,-1,-1,140,141,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
		};
	}

	namespace BACKGROUND_LAYER
	{
		static const int texture_index[2048]=
		{
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,74,79,79,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,75,38,39,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,75,40,41,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,-1,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,73,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,74,79,79,74,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,75,38,39,77,-1,-1,73,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,75,40,41,77,-1,-1,73,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,-1,-1,-1,-1,
			73,73,74,71,71,74,73,73,73,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,73,73,73,73,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,73,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,73,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			73,73,73,73,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,73,73,73,74,79,79,74,73,73,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,75,38,39,77,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,75,40,41,77,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,157,157,74,71,71,74,-1,-1,-1,-1,-1,74,71,71,74,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			73,74,79,79,74,73,73,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,73,73,73,73,73,73,
			-1,75,38,39,77,-1,-1,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,73,-1,-1,-1,-1,-1,
			-1,75,40,41,77,-1,-1,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,73,-1,-1,-1,-1,-1,
			-1,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,157,48,49,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,157,50,51,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,74,79,79,74,157,157,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			73,73,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,157,48,49,-1,-1,-1,73,73,73,73,73,73,74,79,79,74,73,
			-1,-1,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,157,50,51,-1,-1,-1,73,-1,-1,-1,-1,-1,75,38,39,77,-1,
			-1,-1,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,157,157,73,-1,-1,-1,-1,-1,75,40,41,77,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,48,49,75,38,39,77,48,49,-1,-1,-1,-1,-1,-1,74,71,71,74,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,50,51,75,40,41,77,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,73,157,157,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,48,49,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,50,51,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,75,38,39,77,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,75,40,41,77,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,74,71,71,74,-1,-1,-1,74,79,79,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,75,38,39,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,75,40,41,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,79,79,74,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,38,39,77,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,40,41,77,-1,-1,-1,74,79,79,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,71,71,74,-1,-1,-1,75,38,39,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,75,40,41,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,74,71,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
			-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
		};
	}
}

static const MAP_PROPERTIES flying_level_map_properties=
{
	0.125000000000,
	0.125000000000,
	1953.125000000000,
	16777216.000000000000,
	56.000000000000,
	0.250000000000,
	"Data\\Tilesets\\sci_fi_tiles.bmp",
	"Data\\Textures\\Skyplanes\\clouds.bmp",
	256,
	15104,
	128,
	128,
	120,
	155,
	236,
	FLYING_LEVEL_MAP::numshapes,
	FLYING_LEVEL_MAP::shapes,
	FLYING_LEVEL_MAP::numambient_sounds,
	FLYING_LEVEL_MAP::ambient_sounds,
	4.000000000000,
	4.000000000000,
	32,
	64,
	false,
	VECTOR(0.000000000000,8.000000000000),
	0.250000000000,
	1.000000000000,
	{
		FLYING_LEVEL_MAP::PRIMARY_LAYER::texture_index,
		FLYING_LEVEL_MAP::PRIMARY_LAYER::shape_index,
		true,
		VECTOR(0.000000000000,0.000000000000),
		0.000000000000,
		2,
		0.000000000000,
		512.000000000000,
		0,
		0,
		0,
		FLYING_LEVEL_MAP::PRIMARY_LAYER::numlinear_motions,
		FLYING_LEVEL_MAP::PRIMARY_LAYER::numangular_motions,
		FLYING_LEVEL_MAP::PRIMARY_LAYER::linear_motions,
		FLYING_LEVEL_MAP::PRIMARY_LAYER::angular_motions,
		true,
		{512,{2.000000000000,6.000000000000,64.000000000000,16384.000000000000,4,8,11.250000000000,0.500000000000,0.250000000000},{1.000000000000,1.000000000000,0.000000000000},{1.000000000000,0.000000000000,0.000000000000},0.750000000000,4.000000000000,false,{0.000000000000,0.000000000000,0.000000000000},{0.000000000000,0.000000000000,0.000000000000},0.000000000000,0.000000000000},
		FLYING_LEVEL_MAP::PRIMARY_LAYER::numbeams,
		FLYING_LEVEL_MAP::PRIMARY_LAYER::beams,
		FLYING_LEVEL_MAP::PRIMARY_LAYER::numpointlights,
		FLYING_LEVEL_MAP::PRIMARY_LAYER::pointlights
	},
	{
		FLYING_LEVEL_MAP::SECONDARY_LAYER::texture_index,
		FLYING_LEVEL_MAP::SECONDARY_LAYER::shape_index,
		true,
		VECTOR(0.000000000000,0.000000000000),
		0.000000000000,
		0,
		0,
		0,
		2,
		0.000000000000,
		512.000000000000,
		FLYING_LEVEL_MAP::SECONDARY_LAYER::numlinear_motions,
		FLYING_LEVEL_MAP::SECONDARY_LAYER::numangular_motions,
		FLYING_LEVEL_MAP::SECONDARY_LAYER::linear_motions,
		FLYING_LEVEL_MAP::SECONDARY_LAYER::angular_motions,
		true,
		{512,{2.000000000000,6.000000000000,64.000000000000,16384.000000000000,4,8,11.250000000000,0.500000000000,0.250000000000},{1.000000000000,1.000000000000,0.000000000000},{1.000000000000,0.000000000000,0.000000000000},0.750000000000,4.000000000000,false,{0.000000000000,0.000000000000,0.000000000000},{0.000000000000,0.000000000000,0.000000000000},0.000000000000,0.000000000000},
		FLYING_LEVEL_MAP::SECONDARY_LAYER::numbeams,
		FLYING_LEVEL_MAP::SECONDARY_LAYER::beams,
		FLYING_LEVEL_MAP::SECONDARY_LAYER::numpointlights,
		FLYING_LEVEL_MAP::SECONDARY_LAYER::pointlights
	},
	{
		FLYING_LEVEL_MAP::TERTIARY_LAYER::texture_index,
		FLYING_LEVEL_MAP::TERTIARY_LAYER::shape_index,
		true,
		VECTOR(0.000000000000,0.000000000000),
		0.000000000000,
		0,
		0,
		0,
		2,
		0.000000000000,
		256.000000000000,
		FLYING_LEVEL_MAP::TERTIARY_LAYER::numlinear_motions,
		FLYING_LEVEL_MAP::TERTIARY_LAYER::numangular_motions,
		FLYING_LEVEL_MAP::TERTIARY_LAYER::linear_motions,
		FLYING_LEVEL_MAP::TERTIARY_LAYER::angular_motions,
		true,
		{512,{2.000000000000,6.000000000000,64.000000000000,16384.000000000000,4,8,11.250000000000,0.500000000000,0.250000000000},{1.000000000000,1.000000000000,0.000000000000},{1.000000000000,0.000000000000,0.000000000000},0.750000000000,4.000000000000,false,{0.000000000000,0.000000000000,0.000000000000},{0.000000000000,0.000000000000,0.000000000000},0.000000000000,0.000000000000},
		FLYING_LEVEL_MAP::TERTIARY_LAYER::numbeams,
		FLYING_LEVEL_MAP::TERTIARY_LAYER::beams,
		FLYING_LEVEL_MAP::TERTIARY_LAYER::numpointlights,
		FLYING_LEVEL_MAP::TERTIARY_LAYER::pointlights
	},
	{
		FLYING_LEVEL_MAP::FOREGROUND_LAYER::texture_index,
		0,
		true,
		VECTOR(0,0),
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		false,
		{0,{0,0,0,0,0,0,0,0,0},{0,0,0},{0,0,0},0,0},
		0,
		0,
		FLYING_LEVEL_MAP::FOREGROUND_LAYER::numpointlights,
		FLYING_LEVEL_MAP::FOREGROUND_LAYER::pointlights
	},
	{
		FLYING_LEVEL_MAP::BACKGROUND_LAYER::texture_index,
		0,
		true,
		VECTOR(0,0),
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		false,
		{0,{0,0,0,0,0,0,0,0,0},{0,0,0},{0,0,0},0,0},
		0,
		0,
		FLYING_LEVEL_MAP::BACKGROUND_LAYER::numpointlights,
		FLYING_LEVEL_MAP::BACKGROUND_LAYER::pointlights
	}
};

namespace FLYING_LEVEL_MAP
{
	namespace OBJECTS1
	{
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_17_11(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(8960.000000000000,5888.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_5_28(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(2816.000000000000,14592.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_18_29(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(9472.000000000000,15104.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_13_30(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(6912.000000000000,15616.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_11_38(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(5888.000000000000,19712.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_18_40(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(9472.000000000000,20736.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_13_48(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(6912.000000000000,24832.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_18_51(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(9472.000000000000,26368.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline PLAYER_SPACESHIP_OBJECT *create_player_spaceship_9_54(WORLD &world)
		{
			PLAYER_SPACESHIP_OBJECT *object=new PLAYER_SPACESHIP_OBJECT;
			object->main_init(VECTOR(4864.000000000000,27904.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_7_59(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(3840.000000000000,30464.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_14_60(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(7424.000000000000,30976.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline BLOCK_OBJECT *create_block_3_61(WORLD &world)
		{
			BLOCK_OBJECT *object=new BLOCK_OBJECT;
			object->main_init(VECTOR(1792.000000000000,31488.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
	}
}

namespace FLYING_LEVEL_MAP
{
	namespace OBJECTS2
	{
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_3_2(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(1792.000000000000,1280.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_6_2(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(3328.000000000000,1280.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_2_3(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(1280.000000000000,1792.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_4_3(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(2304.000000000000,1792.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_6_4(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(3328.000000000000,2304.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_4_5(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(2304.000000000000,2816.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_8_5(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(4352.000000000000,2816.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
		inline ENEMY_SPACESHIP_OBJECT *create_enemy_spaceship_5_6(WORLD &world)
		{
			ENEMY_SPACESHIP_OBJECT *object=new ENEMY_SPACESHIP_OBJECT;
			object->main_init(VECTOR(2816.000000000000,3328.000000000000),0,VECTOR(0,0),0,world);
			return(object);
		}
	}
}
